buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
        classpath('com.palantir.gradle.docker:gradle-docker:0.20.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'com.yourporject'
version = '1.0.1'
sourceCompatibility = 1.10

repositories {
    // All GA releases (i.e. versions ending in .RELEASE) are deployed to Maven Central, so using the mavenCentral() repository is sufficient for GA releases.
    mavenCentral()
    // this is necessary for building snapshot version
    maven { url "https://repo.spring.io/snapshot" }
    // this is necessary if you are using a milestone or release candidate version, you will need to ensure you have the Spring Milestone repository defined as shown below
    maven { url "https://repo.spring.io/milestone" }

    maven { url "https://repo.spring.io/libs-milestone" }
}

bootRun {
    jvmArgs = ["--add-modules", "java.xml.bind"] //, "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=32323"]
}

dependencies {
    compile('javax.xml.bind:jaxb-api:2.3.0')
    compile('com.sun.xml.bind:jaxb-core:2.3.0')
    compile('com.sun.xml.bind:jaxb-impl:2.3.0')
    compile('javax.activation:activation:1.1.1')

    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth:spring-security-oauth2:2.3.0.RELEASE')
    compile('org.springframework.security:spring-security-jwt:1.0.9.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile('junit:junit:4.12')
    testCompile('org.hamcrest:hamcrest-core:1.3')
}

docker {
    dependsOn build
    name "your-docker-repo/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}